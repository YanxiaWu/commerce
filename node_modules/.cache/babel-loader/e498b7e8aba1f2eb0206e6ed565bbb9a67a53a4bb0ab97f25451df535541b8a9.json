{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u7F16\\u7A0B\\u8BED\\u8A00\\\\practicas\\\\rest-countries-api-with-color-theme-switcher-master\\\\src\\\\components\\\\ListCards\\\\ListCards.jsx\",\n  _s = $RefreshSig$();\nimport Card from 'react-bootstrap/Card';\nimport './ListCards.css';\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ListCards = () => {\n  _s();\n  const [countries, setCountries] = useState([]);\n  // const [searchTerm, setSearchTerm] = useState(\"\");\n  useEffect(() => {\n    fetch(' https://ih-countries-api.herokuapp.com/countries').then(res => res.json()).then(countries => setCountries(countries));\n  }, []);\n\n  // with pagenation\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 10;\n  const pageNumbers = [];\n  const lastIndex = currentPage * itemsPerPage;\n  const firstIndex = lastIndex - itemsPerPage;\n  const currentCountries = countries.slice(firstIndex, lastIndex);\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n  const handleNextPage = () => {\n    setCurrentPage(currentPage + 1);\n  };\n  const handlePrevPage = () => {\n    setCurrentPage(currentPage - 1);\n  };\n  for (let i = 1; i <= Math.ceil(countries.length / itemsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n      children: countries.map(country => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '15rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: `https://flagpedia.net/data/flags/icon/72x54/${country.alpha2Code.toLowerCase()}.png`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: country.name.official\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Capital:\", country.capital]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Area:\", country.area, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Region:\", country.region]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this)]\n        }, country.alpha3Code, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePrevPage,\n          disabled: currentPage === 1,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextPage,\n          disabled: lastIndex >= countries.length,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePageChange(number),\n          disabled: number === currentPage,\n          children: number\n        }, number, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n_s(ListCards, \"BADJYai4mKQ73TmWOnjUEs6DswE=\");\n_c = ListCards;\nexport default ListCards;\nvar _c;\n$RefreshReg$(_c, \"ListCards\");","map":{"version":3,"names":["Card","useEffect","useState","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","ListCards","_s","countries","setCountries","fetch","then","res","json","currentPage","setCurrentPage","itemsPerPage","pageNumbers","lastIndex","firstIndex","currentCountries","slice","handlePageChange","page","handleNextPage","handlePrevPage","i","Math","ceil","length","push","children","map","country","style","width","Img","variant","src","alpha2Code","toLowerCase","fileName","_jsxFileName","lineNumber","columnNumber","Body","Title","name","official","Text","capital","area","region","alpha3Code","onClick","disabled","number","_c","$RefreshReg$"],"sources":["D:/编程语言/practicas/rest-countries-api-with-color-theme-switcher-master/src/components/ListCards/ListCards.jsx"],"sourcesContent":["import Card from 'react-bootstrap/Card';\r\nimport './ListCards.css'\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nconst ListCards = () => {\r\n\r\n    const [countries, setCountries] = useState([])\r\n    // const [searchTerm, setSearchTerm] = useState(\"\");\r\n    useEffect(() => {\r\n        fetch(' https://ih-countries-api.herokuapp.com/countries')\r\n            .then(res => res.json())\r\n            .then(countries => setCountries(countries))\r\n\r\n    }, [])\r\n\r\n\r\n    // with pagenation\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const itemsPerPage = 10\r\n    const pageNumbers = []\r\n\r\n    const lastIndex = currentPage * itemsPerPage\r\n    const firstIndex = lastIndex - itemsPerPage\r\n\r\n    const currentCountries = countries.slice(firstIndex, lastIndex)\r\n\r\n\r\n    const handlePageChange = (page) => {\r\n        setCurrentPage(page)\r\n    }\r\n\r\n    const handleNextPage = () => {\r\n        setCurrentPage(currentPage + 1)\r\n    }\r\n\r\n    const handlePrevPage = () => {\r\n        setCurrentPage(currentPage - 1)\r\n    }\r\n\r\n    for (let i = 1; i <= Math.ceil(countries.length / itemsPerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <>\r\n                {countries.map((country) => {\r\n\r\n                    return (\r\n                        <Card style={{ width: '15rem' }} key={country.alpha3Code}>\r\n                            <Card.Img variant=\"top\" src={`https://flagpedia.net/data/flags/icon/72x54/${country.alpha2Code.toLowerCase()}.png`} />\r\n                            <Card.Body>\r\n                                <Card.Title>{country.name.official}</Card.Title>\r\n                                <Card.Text>\r\n                                    <p>Capital:{country.capital}</p>\r\n                                    <p>Area:{country.area} </p>\r\n                                    <p>Region:{country.region}</p>\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    )\r\n                })\r\n\r\n                }\r\n            </>\r\n\r\n            <>\r\n\r\n                <div>\r\n                    <button onClick={handlePrevPage} disabled={currentPage === 1}>\r\n                        Previous\r\n                    </button>\r\n                    <button onClick={handleNextPage} disabled={lastIndex >= countries.length}>\r\n                        Next\r\n                    </button>\r\n                </div>\r\n                <div>\r\n                    {pageNumbers.map(number => (\r\n                        <button key={number} onClick={() => handlePageChange(number)} disabled={number === currentPage}>\r\n                            {number}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n            </>\r\n\r\n        </>\r\n    );\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default ListCards;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}