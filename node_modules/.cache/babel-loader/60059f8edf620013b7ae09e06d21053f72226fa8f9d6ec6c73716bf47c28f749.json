{"ast":null,"code":"// import Card from 'react-bootstrap/Card';\n// import './ListCards.css'\n// import { useEffect, useState } from \"react\";\n// import { Link } from \"react-router-dom\";\n// const ListCards = () => {\n\n//     const [countries, setCountries] = useState([])\n\n//     useEffect(() => {\n//         fetch(' https://ih-countries-api.herokuapp.com/countries')\n//             .then(res => res.json())\n//             .then(countries => setCountries(countries))\n\n//     }, [])\n\n//     const [currentPage, setCurrentPage] = useState(1)\n//     const itemsPerPage = 10\n//     const pageNumbers = []\n\n//     const lastIndex = currentPage * itemsPerPage\n//     const firstIndex = lastIndex - itemsPerPage\n\n//     const currentCountries = countries.slice(firstIndex, lastIndex)\n\n//     const handlePageChange = (page) => {\n//         setCurrentPage(page)\n//     }\n\n//     const handleNextPage = () => {\n//         setCurrentPage(currentPage + 1)\n//     }\n\n//     const handlePrevPage = () => {\n//         setCurrentPage(currentPage - 1)\n//     }\n\n//     for (let i = 1; i <= Math.ceil(countries.length / itemsPerPage); i++) {\n//         pageNumbers.push(i);\n//     }\n\n//     return (\n//         <>\n\n//             <>\n//                 {countries.map((country) => {\n\n//                     return (\n//                         <Card style={{ width: '15rem' }} key={country.alpha3Code}>\n//                             <Card.Img variant=\"top\" src={`https://flagpedia.net/data/flags/icon/72x54/${country.alpha2Code.toLowerCase()}.png`} />\n//                             <Card.Body>\n//                                 <Card.Title>{country.name.official}</Card.Title>\n//                                 <Card.Text>\n//                                     <p>Capital:{country.capital}</p>\n//                                     <p>Area:{country.area} </p>\n//                                     <p>Region:{country.region}</p>\n//                                 </Card.Text>\n//                             </Card.Body>\n//                         </Card>\n//                     )\n//                 })\n\n//                 }\n//             </>\n\n//             <>\n\n//                 <div>\n//                     <button onClick={handlePrevPage} disabled={currentPage === 1}>\n//                         Previous\n//                     </button>\n//                     <button onClick={handleNextPage} disabled={lastIndex >= countries.length}>\n//                         Next\n//                     </button>\n//                 </div>\n//                 <div>\n//                     {pageNumbers.map(number => (\n//                         <button key={number} onClick={() => handlePageChange(number)} disabled={number === currentPage}>\n//                             {number}\n//                         </button>\n//                     ))}\n//                 </div>\n//             </>\n\n//         </>\n//     );\n\n// }\n\n// export default ListCards;","map":{"version":3,"names":[],"sources":["D:/编程语言/practicas/rest-countries-api-with-color-theme-switcher-master/src/components/ListCards/ListCards.jsx"],"sourcesContent":["// import Card from 'react-bootstrap/Card';\r\n// import './ListCards.css'\r\n// import { useEffect, useState } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n// const ListCards = () => {\r\n\r\n//     const [countries, setCountries] = useState([])\r\n   \r\n//     useEffect(() => {\r\n//         fetch(' https://ih-countries-api.herokuapp.com/countries')\r\n//             .then(res => res.json())\r\n//             .then(countries => setCountries(countries))\r\n\r\n//     }, [])\r\n\r\n\r\n\r\n//     const [currentPage, setCurrentPage] = useState(1)\r\n//     const itemsPerPage = 10\r\n//     const pageNumbers = []\r\n\r\n//     const lastIndex = currentPage * itemsPerPage\r\n//     const firstIndex = lastIndex - itemsPerPage\r\n\r\n//     const currentCountries = countries.slice(firstIndex, lastIndex)\r\n\r\n\r\n//     const handlePageChange = (page) => {\r\n//         setCurrentPage(page)\r\n//     }\r\n\r\n//     const handleNextPage = () => {\r\n//         setCurrentPage(currentPage + 1)\r\n//     }\r\n\r\n//     const handlePrevPage = () => {\r\n//         setCurrentPage(currentPage - 1)\r\n//     }\r\n\r\n//     for (let i = 1; i <= Math.ceil(countries.length / itemsPerPage); i++) {\r\n//         pageNumbers.push(i);\r\n//     }\r\n\r\n\r\n\r\n//     return (\r\n//         <>\r\n\r\n//             <>\r\n//                 {countries.map((country) => {\r\n\r\n//                     return (\r\n//                         <Card style={{ width: '15rem' }} key={country.alpha3Code}>\r\n//                             <Card.Img variant=\"top\" src={`https://flagpedia.net/data/flags/icon/72x54/${country.alpha2Code.toLowerCase()}.png`} />\r\n//                             <Card.Body>\r\n//                                 <Card.Title>{country.name.official}</Card.Title>\r\n//                                 <Card.Text>\r\n//                                     <p>Capital:{country.capital}</p>\r\n//                                     <p>Area:{country.area} </p>\r\n//                                     <p>Region:{country.region}</p>\r\n//                                 </Card.Text>\r\n//                             </Card.Body>\r\n//                         </Card>\r\n//                     )\r\n//                 })\r\n\r\n//                 }\r\n//             </>\r\n\r\n//             <>\r\n\r\n//                 <div>\r\n//                     <button onClick={handlePrevPage} disabled={currentPage === 1}>\r\n//                         Previous\r\n//                     </button>\r\n//                     <button onClick={handleNextPage} disabled={lastIndex >= countries.length}>\r\n//                         Next\r\n//                     </button>\r\n//                 </div>\r\n//                 <div>\r\n//                     {pageNumbers.map(number => (\r\n//                         <button key={number} onClick={() => handlePageChange(number)} disabled={number === currentPage}>\r\n//                             {number}\r\n//                         </button>\r\n//                     ))}\r\n//                 </div>\r\n//             </>\r\n\r\n//         </>\r\n//     );\r\n\r\n\r\n// }\r\n\r\n\r\n\r\n\r\n// export default ListCards;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;;AAEA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAIA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;;AAKA"},"metadata":{},"sourceType":"module","externalDependencies":[]}