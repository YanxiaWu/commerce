{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u7F16\\u7A0B\\u8BED\\u8A00\\\\practicas\\\\rest-countries-api-with-color-theme-switcher-master\\\\src\\\\components\\\\ListCards\\\\ListCards.jsx\",\n  _s = $RefreshSig$();\nimport Card from 'react-bootstrap/Card';\nimport './ListCards.css';\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ListCards = props => {\n  _s();\n  const [countries, setCountries] = useState([]);\n  useEffect(() => {\n    fetch(' https://ih-countries-api.herokuapp.com/countries').then(res => res.json()).then(countries => setCountries(countries));\n  }, []);\n  const filteredData = countries.filter(el => {\n    if (props.input === '') {\n      return el;\n    } else {\n      return el.name.official.toLowerCase().includes(props.input);\n    }\n  });\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 8;\n  const pageNumbers = [];\n  const lastIndex = currentPage * itemsPerPage;\n  const firstIndex = lastIndex - itemsPerPage;\n  const currentCountries = filteredData.slice(firstIndex, lastIndex);\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n  const handleNextPage = () => {\n    setCurrentPage(currentPage + 1);\n  };\n  const handlePrevPage = () => {\n    setCurrentPage(currentPage - 1);\n  };\n  for (let i = 1; i <= Math.ceil(filteredData.length / itemsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  // const [currentPage, setCurrentPage] = useState(1)\n  // const itemsPerPage = 8\n  // const pageNumbers = []\n\n  // const lastIndex = currentPage * itemsPerPage\n  // const firstIndex = lastIndex - itemsPerPage\n  // const currentCountries = countries.slice(firstIndex, lastIndex)\n\n  // const handlePageChange = (page) => {\n  //     setCurrentPage(page)\n  // }\n\n  // const handleNextPage = () => {\n  //     setCurrentPage(currentPage + 1)\n  // }\n\n  // const handlePrevPage = () => {\n  //     setCurrentPage(currentPage - 1)\n  // }\n\n  // for (let i = 1; i <= Math.ceil(countries.length / itemsPerPage); i++) {\n  //     pageNumbers.push(i);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [filteredData.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: currentCountries.map(country => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              width: '18rem'\n            },\n            \"data-example\": country,\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: `https://flagpedia.net/data/flags/icon/72x54/${country.alpha2Code.toLowerCase()}.png`,\n              style: {\n                width: '100%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: country.name.official\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Capital:\", country.capital]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Area:\", country.area, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Region:\", country.region]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 37\n            }, this)]\n          }, country.alpha3Code, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 33\n          }, this)\n        }, void 0, false);\n      })\n    }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageBtn\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrevPage,\n        disabled: currentPage === 1,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePageChange(number),\n          disabled: number === currentPage,\n          children: number\n        }, number, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextPage,\n        disabled: lastIndex >= countries.length,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(ListCards, \"BADJYai4mKQ73TmWOnjUEs6DswE=\");\n_c = ListCards;\nexport default ListCards;\nvar _c;\n$RefreshReg$(_c, \"ListCards\");","map":{"version":3,"names":["Card","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","ListCards","props","_s","countries","setCountries","fetch","then","res","json","filteredData","filter","el","input","name","official","toLowerCase","includes","currentPage","setCurrentPage","itemsPerPage","pageNumbers","lastIndex","firstIndex","currentCountries","slice","handlePageChange","page","handleNextPage","handlePrevPage","i","Math","ceil","length","push","children","map","country","style","width","Img","variant","src","alpha2Code","fileName","_jsxFileName","lineNumber","columnNumber","Body","Title","Text","capital","area","region","alpha3Code","className","onClick","disabled","number","_c","$RefreshReg$"],"sources":["D:/编程语言/practicas/rest-countries-api-with-color-theme-switcher-master/src/components/ListCards/ListCards.jsx"],"sourcesContent":["import Card from 'react-bootstrap/Card';\r\nimport './ListCards.css'\r\nimport { useEffect, useState } from \"react\"\r\n\r\n\r\nconst ListCards = (props) => {\r\n\r\n\r\n    const [countries, setCountries] = useState([])\r\n    useEffect(() => {\r\n        fetch(' https://ih-countries-api.herokuapp.com/countries')\r\n            .then(res => res.json())\r\n            .then(countries => setCountries(countries))\r\n\r\n    }, [])\r\n\r\n\r\n    const filteredData = countries.filter((el) => {\r\n        if (props.input === '') {\r\n            return el;\r\n        }\r\n\r\n        else {\r\n            return el.name.official.toLowerCase().includes(props.input)\r\n        }\r\n    })\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const itemsPerPage = 8\r\n    const pageNumbers = []\r\n\r\n    const lastIndex = currentPage * itemsPerPage\r\n    const firstIndex = lastIndex - itemsPerPage\r\n    const currentCountries = filteredData.slice(firstIndex, lastIndex)\r\n\r\n    const handlePageChange = (page) => {\r\n        setCurrentPage(page)\r\n    }\r\n\r\n    const handleNextPage = () => {\r\n        setCurrentPage(currentPage + 1)\r\n    }\r\n\r\n    const handlePrevPage = () => {\r\n        setCurrentPage(currentPage - 1)\r\n    }\r\n\r\n\r\n    for (let i = 1; i <= Math.ceil(filteredData.length / itemsPerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    // const [currentPage, setCurrentPage] = useState(1)\r\n    // const itemsPerPage = 8\r\n    // const pageNumbers = []\r\n\r\n    // const lastIndex = currentPage * itemsPerPage\r\n    // const firstIndex = lastIndex - itemsPerPage\r\n    // const currentCountries = countries.slice(firstIndex, lastIndex)\r\n\r\n    // const handlePageChange = (page) => {\r\n    //     setCurrentPage(page)\r\n    // }\r\n\r\n    // const handleNextPage = () => {\r\n    //     setCurrentPage(currentPage + 1)\r\n    // }\r\n\r\n    // const handlePrevPage = () => {\r\n    //     setCurrentPage(currentPage - 1)\r\n    // }\r\n\r\n\r\n    // for (let i = 1; i <= Math.ceil(countries.length / itemsPerPage); i++) {\r\n    //     pageNumbers.push(i);\r\n    // }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {filteredData.length > 0 && (\r\n                <>\r\n\r\n                    {currentCountries.map((country) => {\r\n\r\n                        return (\r\n                            <>\r\n                                <Card style={{ width: '18rem' }} key={country.alpha3Code} data-example={country} >\r\n                                    <Card.Img variant=\"top\" src={`https://flagpedia.net/data/flags/icon/72x54/${country.alpha2Code.toLowerCase()}.png`} style={{ width: '100%' }} />\r\n                                    <Card.Body>\r\n                                        <Card.Title>{country.name.official}</Card.Title>\r\n                                        <Card.Text>\r\n                                            <p>Capital:{country.capital}</p>\r\n                                            <p>Area:{country.area} </p>\r\n                                            <p>Region:{country.region}</p>\r\n                                        </Card.Text>\r\n                                    </Card.Body>\r\n                                </Card >\r\n\r\n                            </>\r\n                        );\r\n                    })}\r\n                </>\r\n            )\r\n            }\r\n\r\n            <div className=\"pageBtn\">\r\n                <button onClick={handlePrevPage} disabled={currentPage === 1}>\r\n                    Previous\r\n                </button>\r\n                <div>\r\n                    {pageNumbers.map(number => (\r\n                        <button key={number} onClick={() => handlePageChange(number)} disabled={number === currentPage}>\r\n                            {number}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n                <button onClick={handleNextPage} disabled={lastIndex >= countries.length}>\r\n                    Next\r\n                </button>\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListCards"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}